TinyMUX 2.3:  CHANGES
Last Update:  February 2003

Major changes that may affect performance and require softcode tweaks:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 -- Dbconvert is now depreciated in favor of the same features in a
    stand-alone mode of netmux.  On Unix, there is a symbolic link for
    dbconvert to netmux.  But, on both Win32 and Unix, all the features
    of stand-alone mode are accessible via new command line options as
    follows:

        netmux -d<basename> -i<infile> -o<outfile> [-l|-u|-k]


Feature Additions:
~~~~~~~~~~~~~~~~~
 -- Quotas are checked/repaired during @dbck.


Bug Fixes:
~~~~~~~~~
 -- Alierak fix for buffer overflow exploit in slave process.
 -- Alierak fix for logic bug in logging.
 -- Alierak fixes build breakage on Darwin due to inconsistent use of
    size_t.
 -- Fix SIGSEGV in SCRAMBLE().
 -- Alierak fixes strcat() given that its assumptions about TinyExec are
    no longer true.
 -- Alierak fix for home(bad_obj) logic.
 -- Alierak fixes off-by-one error in wrap().
 -- Only allow printable characters in identd.  The slave process on
    Unix does this.  The threaded implementation for Win32 didn't.
 -- Alierak reported that SCRAMBLE still scrambles characters off the
    end of the buffer.  He provided a patch that fixed that while not
    giving a flat distribution.  This final check-in fixed both issues.
 -- Bug fix in mux_memicmp().  mux_memicmp("June ", "june", 4) != 0
    when it should.  Brazil's bug.  mux_memicmp() was added to fix a
    build problem on QNX, so the bug would have been introduce at the
    same time.  It effectively turned off the auto-magic date parsing
    built into convtime(), so if that hasn't been working for you,
    this is the reason why.
 -- Alierak fixes crash case with obscure god-only lock case.
 -- Alierak fixes uninitialized use of second subexpression in attr
    and eval lock cases.
 -- Alierak fixes several stepping past unparse buffer terminator cases. 
 -- Alierak perks up boolexp generally.
 -- cf_bool() and config() briefly didn't handle bool type correctly.
 -- Players creating themselves from the welcome screen could cause
    NOSPOOF-related messages to show a random executor to other players
    on the Public channel.
 -- Player names weren't validated properly. Instead of mux_PlayerNameSet[],
    the code was using mux_ObjectNameSet[].
 -- Fixed the bCanRead/read_remote_desc bugs.
 -- Rename and turn character-typing tables into macros.
 -- Fixed SIGSEGV bugs related to characters with the high-order bit
    set.  Introduced, found, and fixed by Brazil.
 -- Same as above in translate_string() reported by Sean Hunter.  Fixed
    by Brazil.
 -- Fixed test_time_t() for 64-bit platforms. Reported by Alierak.  
    Fixed with Alierak.  Daylight Savings Time information would have
    been missing on at least some and possibly all 64-bit platforms.
 -- Fixed @flag so that it functions.  Reported by Marlek.  Brazil's bug.
    Fixed by Brazil.
 -- Fixed flag_name documentation.
 -- Fixed SIGSEGV bug in UpdateOffsetTable(). This function maintains
    a table of DST/zone differences and the interval of time over which
    the DST/zone difference is valid. There are typically two intervals
    per calendar year (DST in force and not).  The table can whole 50 
    entries (or 25 years worth).  

    If the table was full, and the Least-Recently-Used (LRU) entry is 
    the last entry in the table, and we are adding an entry beyond the 
    interval covered by the last entry, then a SIGSEGV can occur.  
    Reported by Anomaly/nails.  Brazil's bug.  Fixed by Brazil.
 
    A broader case of this one was originally reported by Lucifer 
    against MUX 2.1 and fixed 2001-OCT-16.  The fix wasn't sufficient.


Performance Enhancements:
~~~~~~~~~~~~~~~~~~~~~~~~
 -- Jake sorted the mudconf structures first by type and then by name.


Cosmetic Changes:
~~~~~~~~~~~~~~~~
 -- Alierak fix for typos in NOTES.


Miscellaneous:
~~~~~~~~~~~~~
 -- Switched all internal use of BOOL type to bool type.

